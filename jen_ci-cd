


https://www.devopsschool.com/training/ansible-training-hyderabad.html








Venky Chary:
diff btwn ci/cd/cd---------------------------------------------------------------- 
 
Continuous integration 
Developers practicing continuous integration merge their changes back to the main branch as often as possible.
 The developer's changes are validated by creating a build and running automated tests against the build. 
 By doing so, you avoid integration challenges that can happen when waiting for release day to merge changes into the release branch. 
 
Continuous integration puts a great emphasis on testing automation to check that the application is not broken 

whenever new commits are integrated into the main branch. 
 
Continuous delivery 
Continuous delivery is an extension of continuous integration since it automatically deploys

all code changes to a testing and/or production environment after the build stage.  
 
This means that on top of automated testing, you have an automated release process and you can deploy your application any time by clicking a button. 
 
In theory, with continuous delivery, you can decide to release daily, weekly, 
fortnightly, or whatever suits your business requirements. However, if you truly want to get the benefits of continuous delivery, 
you should deploy to production as early as possible to make sure that you release small batches that are easy to troubleshoot in case of a problem. 
 
Continuous deployment 
Continuous deployment goes one step further than continuous delivery.
 With this practice, every change that passes all stages of your production pipeline is released to your customers. 
 There's no human intervention, and only a failed test will prevent a new change to be deployed to production. 
 
Continuous deployment is an excellent way to accelerate the feedback loop with your customers and take pressure off the team as there isn't a Release Day anymore. 
Developers can focus on building software, and they see their work go live minutes after they've finished working on it.

so,if u want to create any pipeline ,first we want the version control repository details we want,so my project were in the github,
so i took that git hub repo ,for that one devoloper has written the build script ,maven build script, so i took that detailed, 
so already in my jenkins we have configure the maven ,okay,and integrate the sonar cube and e-mail feature also configure,
so i took that github repo url, as soon as u login to the jenkins dashboard and left side u vil see a new item,
click on that one and give that job name ,wtever the job name u want,after that select that version control system as a git,
give that version control system repo url ,so if u select the type of the job like,suppose i have selected free style ,
so it vil ask the branch name also ,after the doing repo url ,by defualt it vil take branch name as the master branch,
so if u want to do the build for other branch ,u can give that branch name also, then after that u can select ,
so this is for maven project ,so invoke the maven top level goals ,and select that one and give that
 wtever the goals u want to excute that particular project ,suppose "mvn clean deploy" ,so we are using deploy , 
 bcz we integrated the nexus repo to with the jenkins,as soon as build is done,it vil savig artifactory into the nexux repo,
 so after that we have integrated urban code deploy ,so automatically it deploying to that liberty profile..
 so here as soon as the build started first it vil run the all the  j-unit(jenkin unit) test cases, 
 once the j-unit test cases are passed ,then its doing build,suppose if the j-unit tests are failed ,
 the build is failing ,and it vil send a mail to the status mean to all the tests who are in,, 
 so like that i created a for diff diff project (free style,maven style,pipeline and multi branch pipeline jobs) i created.. 
 and i have enable that "pool scm" for dev environment ,as soon as the devloper has commited the code in that github,any repository ,
 automatically the jenkins vil trigger and it vil take the latest code from that github,and it vil doing the build and deployimg it wtever the target it vil run..